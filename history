;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(evil-ex-search-history buffer-name-history org-read-date-history face-name-history minibuffer-history embark--prompter-history empty-history eglot-command-history consult-org--history consult--theme-history consult--grep-history woman-topic-history evil-ex-history file-name-history extended-command-history))
(setq evil-ex-search-history '("use-package rece" "user-emacs-directory" "auto-save"))
(setq face-name-history '("font-lock-comment-face"))
(setq minibuffer-history '("initial-buffer-choice" "org-src-fontify-natively" "user-emacs-directory" "doom-themes-enable-italic" "custom-set-faces" "org-support-shift-select" "evil-mode-line-format" "setq" "add-hook" "org-edit-src-exit" "yas-verbosity" "x-select-enable-clipboard"))
(setq consult-org--history '("which" "i3" "vertico" "org " "key" "superst" "dashbo" "eglot" "undo" "auto" "key" "evil" "dash" "modelin" "evil" "org mode " "vertic" "vertico" "evil"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("messages" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("%s/SPC m/," 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("messages" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '("/media/emacs/gnu/init.org" "/etc/pacman.conf" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "~/test.org" "/media/emacs/gnu/init.org" "/media/repos/dotfiles-dt/.config/doom/init.org" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "/media/repos/dotfiles-dt/.config/doom/init.org" "/media/emacs/gnu/init.org" "~/org/notes.org" "/media/emacs/gnu/init.sh" "/media/emacs/gnu/init.c" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "~/.scripts/emacs-i3-integration" "~/init.org" "/media/emacs/gnu/init.org" "~/init.org" "/media/emacs/gnu/init.org" "/media/emacs/gnu/custom.el" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "/media/emacs/gnu/init.el" "/media/emacs/gnu/init.org" "~/init.org" "/media/emacs/gnu/init.org" "~/init.org" "/media/emacs/gnu/init.org" "~/init.el" "/media/emacs/gnu/init.el" "~/.config/doom/config.org" "~/.config/chemacs/profile" "~/test.org" "/media/emacs/gnu/init.org" "~/" "/media/emacs/gnu/init.org" "~/test.org" "/media/emacs/gnu/init.org" "/media/emacs/gnu" "/media/emacs/gnu/init.org" "~/.config/chemacs/profile" "~/test.org" "~/test.el" "~/test.c" "/media/emacs/gnu/test.c" "/media/emacs/gnu/test.py" "/media/emacs/gnu/init.org" "~/test.org" "~/test.el" "/media/emacs/gnu/init.org"))
(setq extended-command-history '("eval-buffer" "yas-minor-mode" "org-version" "org-superstar-mode" "check-parens" "org-superstar-mode" "org-agenda" "find-file" "evil-mode" "dashboard-refresh-buffer" "consult-theme" "eglot" "customize-face" "font-lock-mode" "eglot" "consult-recent-file" "evil-org->" "+evil-org-<" "evil-org->" "evil-org-<" "evil-shift-right" "evil-org-<" "evil-org-mode" "consult-org-heading" "describe-symbol" "consult-org-heading" "org-edit-inline-src-code" "org-edit-src-code" "org-mode" "emacs-lisp-mode" "format-decode-buffer" "org-edit-src-code" "isearch-forward-exit-minibuffer" "abort-minibuffers" "consult-recent-file" "abort-minibuffers" "exit-minibuffer" "consult-org-heading" "restart-emacs" "eval-defun" "consult-org-heading" "evil-window-vsplit" "describe-symbol" "yas-minor-mode" "comment-dwim" "consult-recent-file" "eglot" "messages-buffer-mode" "consult-org-heading" "consult-theme" "find-file" "consult-grep"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((11046 "/media/emacs/gnu/init.org") (11154 "/media/emacs/gnu/init.org") (11573 "/media/emacs/gnu/init.org") (88727 "/media/emacs/gnu/init.org") (56192 "/media/emacs/gnu/init.org") (39563 "/media/emacs/gnu/init.org") (38476 "/media/emacs/gnu/init.org") (39561 "/media/emacs/gnu/init.org") (55052 "/media/emacs/gnu/init.org") (49888 "/media/emacs/gnu/init.org") (32460 "/media/emacs/gnu/init.org") (32424 "/media/emacs/gnu/init.org") (20073 "/media/emacs/gnu/init.org") (19795 "/media/emacs/gnu/init.org") (19146 "/media/emacs/gnu/init.org") (18755 "/media/emacs/gnu/init.org") (18661 "/media/emacs/gnu/init.org") (16562 "/media/emacs/gnu/init.org") (15889 "/media/emacs/gnu/init.org") (14705 "/media/emacs/gnu/init.org") (12242 "/media/emacs/gnu/init.org") (2372 "/media/emacs/gnu/init.org") (2164 "/media/emacs/gnu/init.org") (2129 "/media/emacs/gnu/init.org") (2108 "/media/emacs/gnu/init.org") (2062 "/media/emacs/gnu/init.org") (2000 "/media/emacs/gnu/init.org") (494 "/media/emacs/gnu/init.org") (55029 "/media/emacs/gnu/init.org") (71946 "/media/emacs/gnu/init.org") (55029 "/media/emacs/gnu/init.org") (54978 "/media/emacs/gnu/init.org") (71950 "/media/emacs/gnu/init.org") (71957 "/media/emacs/gnu/init.org") (1603 "/media/emacs/gnu/init.org") (72025 "/media/emacs/gnu/init.org") (73281 "/media/emacs/gnu/init.org") (56340 "/media/emacs/gnu/init.org") (39112 "/media/emacs/gnu/init.org") (3559 "/media/emacs/gnu/init.org") (11300 "/media/emacs/gnu/init.org") (68834 "/media/emacs/gnu/init.org") (67865 "/media/emacs/gnu/init.org") (67358 "/media/emacs/gnu/init.org") (66000 "/media/emacs/gnu/init.org") (65702 "/media/emacs/gnu/init.org") (52606 "/media/emacs/gnu/init.org") (59610 "/media/emacs/gnu/init.el") (59185 "/media/emacs/gnu/init.el") (58725 "/media/emacs/gnu/init.el") (57457 "/media/emacs/gnu/init.el") (57209 "/media/emacs/gnu/init.el") (64630 "/media/emacs/gnu/init.el") (68834 "/media/emacs/gnu/init.org") (67865 "/media/emacs/gnu/init.org") (67358 "/media/emacs/gnu/init.org") (66000 "/media/emacs/gnu/init.org") (65702 "/media/emacs/gnu/init.org") (88663 "/media/emacs/gnu/init.org") (72926 "/media/emacs/gnu/init.org") (60543 "/media/emacs/gnu/init.org") (40162 "/media/emacs/gnu/init.org") (26694 "/media/emacs/gnu/init.org") (28 "/media/emacs/gnu/init.org") (67873 "/media/emacs/gnu/init.org") (53526 "/media/emacs/gnu/init.org") (51778 "/media/emacs/gnu/init.org") (73063 "/media/emacs/gnu/init.org") (63046 "/media/emacs/gnu/init.el") (59610 "/media/emacs/gnu/init.el") (59185 "/media/emacs/gnu/init.el") (58725 "/media/emacs/gnu/init.el") (57457 "/media/emacs/gnu/init.el") (57427 "/media/emacs/gnu/init.el") (32 "/media/emacs/gnu/init.el") (60613 "/media/emacs/gnu/init.org") (55853 "/media/emacs/gnu/init.org") (46370 "/media/emacs/gnu/init.org") (69801 "/media/emacs/gnu/init.org") (89526 "/media/emacs/gnu/init.org") (72563 "/media/emacs/gnu/init.org") (72997 "/media/emacs/gnu/init.org") (72403 "/media/emacs/gnu/init.org") (73076 "/media/emacs/gnu/init.org") (72933 "/media/emacs/gnu/init.org") (52450 "/media/emacs/gnu/init.org") (45034 "/media/emacs/gnu/init.org") (47145 "/media/emacs/gnu/init.org") (25638 "/media/emacs/gnu/init.org") (58958 "/media/emacs/gnu/init.org") (61761 "/media/emacs/gnu/init.org") (56570 "/media/emacs/gnu/init.org") (56879 "/media/emacs/gnu/init.org") (93386 "/media/emacs/gnu/init.org") (56629 "/media/emacs/gnu/init.org") (57410 "/media/emacs/gnu/init.org") (56958 "/media/emacs/gnu/init.org") (57229 "/media/emacs/gnu/init.org") (56958 "/media/emacs/gnu/init.org") (3206 "/media/emacs/gnu/init.org")))
(setq kill-ring '(#("
" 0 1 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t))) #("(setup (:pkg no-littering)
  (require 'no-littering))
" 0 8 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 8 12 (face (font-lock-builtin-face org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 12 27 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 27 30 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 30 37 (face (font-lock-keyword-face org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 37 39 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 39 51 (face (font-lock-constant-face org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 51 53 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t)) 53 54 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("  
  
  
  
  
  
  
  
  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 2 3 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 3 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 5 6 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 6 8 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 8 9 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 9 11 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 11 12 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 12 14 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 14 15 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 15 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 17 18 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 18 20 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 20 21 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 21 23 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 23 24 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle)) 24 26 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block) yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) org-category "init" font-lock-multiline t face (org-block))) #("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "init" font-lock-multiline t face (org-block)))) t evil-delete-yanked-rectangle))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t))) #("** Loading custom lisp files
#+BEGIN_SRC emacs-lisp
  ;;(load (expand-file-name \"jib-funcs.el\" user-emacs-directory))
  ;;(load (expand-file-name \"private.el\" user-emacs-directory))
  (setq custom-file (expand-file-name \"custom.el\" user-emacs-directory))

  (load custom-file)
#+END_SRC
" 0 1 (composition (1 1 [32]) face org-superstar-leading fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (composition (2 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 3 28 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 28 29 (fontified t yank-handler (evil-yank-line-handler nil t)) 29 40 (face org-block-begin-line font-lock-multiline t font-lock-fontified t prettify-symbols-end 15038 prettify-symbols-start 15027 composition (5 11 [8811]) fontified t yank-handler (evil-yank-line-handler nil t)) 40 51 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 51 52 (help-echo nil face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 52 54 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 54 56 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 56 118 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 118 120 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 120 122 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 122 182 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 182 185 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 185 189 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 189 220 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 220 231 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 231 255 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 255 256 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 256 277 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 277 286 (face org-block-end-line font-lock-multiline t font-lock-fontified t prettify-symbols-end 15284 prettify-symbols-start 15275 composition (5 9 [8811]) fontified t yank-handler (evil-yank-line-handler nil t)) 286 287 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #("(concat user-emacs-directory " 0 8 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 29 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #("Backup Files" 0 12 (fontified t face org-level-2)) #("
" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t foreign-selection STRING yank-handler (evil-yank-line-handler nil t))) #("()
" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("** Backup Files
" 0 1 (composition (1 1 [32]) face org-superstar-leading fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (composition (2 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 3 15 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 15 16 (fontified t yank-handler (evil-yank-line-handler nil t))) #("Escape exit everything.
#+begin_src emacs-lisp :tangle ./early-init.el
#+end_src
" 0 24 (fontified t yank-handler (evil-yank-line-handler nil t)) 24 35 (face org-block-begin-line font-lock-multiline t prettify-symbols-end 20295 prettify-symbols-start 20284 composition (5 11 [8811]) font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 35 70 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 70 71 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 71 80 (face org-block-end-line font-lock-multiline t prettify-symbols-end 20340 prettify-symbols-start 20331 composition (5 9 [8811]) font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 80 81 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("(global-set-key (kbd \"<escape>\") 'keyboard-escape-quit)
" 0 21 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 21 31 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 31 56 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) "#" "#" #("how to 
" 0 8 (yank-handler (evil-yank-line-handler nil t))) #("find" 0 4 (fontified t)) #("\"fu\" '(doom/sudo-find-file)
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-string-face) 4 6 (yank-handler (evil-yank-line-handler nil t) fontified t) 6 26 (yank-handler (evil-yank-line-handler nil t) fontified t) 26 27 (yank-handler (evil-yank-line-handler nil t) fontified t) 27 28 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("\"fu\" '(doom/sudo-find-file)
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-string-face) 4 6 (yank-handler (evil-yank-line-handler nil t) fontified t) 6 26 (yank-handler (evil-yank-line-handler nil t) fontified t) 26 27 (yank-handler (evil-yank-line-handler nil t) fontified t) 27 28 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("  
  
  
  
  
  
  
  
  
  
  
  " 0 2 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 2 3 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 3 5 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 5 6 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 6 8 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 8 9 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 9 11 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 11 12 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 12 14 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 14 15 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 15 17 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 17 18 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 18 20 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 20 21 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 21 23 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 23 24 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 24 26 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 26 30 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 30 32 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t) 32 33 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 33 35 (yank-handler (evil-yank-block-handler (#("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #(";;;
   
;;;" 0 3 (yank-handler (evil-yank-block-handler (#(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("   " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t))) t evil-delete-yanked-rectangle) face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t) 3 4 (yank-handler (evil-yank-block-handler (#(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("   " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t))) t evil-delete-yanked-rectangle)) 4 7 (yank-handler (evil-yank-block-handler (#(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("   " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t))) t evil-delete-yanked-rectangle) face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t) 7 8 (yank-handler (evil-yank-block-handler (#(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("   " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t))) t evil-delete-yanked-rectangle)) 8 11 (yank-handler (evil-yank-block-handler (#(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("   " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #(";;;" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t))) t evil-delete-yanked-rectangle) face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("Calculations" 0 12 (help-echo nil face (font-lock-comment-face org-block) fontified t font-lock-multiline t src-block t font-lock-fontified t)) #(";;;;;;;;;;;;;;;;;;
;; Calculations ;;
;;;;;;;;;;;;;;;;;;
" 0 18 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 18 19 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 19 22 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 22 38 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38 56 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 56 57 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) #(";;;;
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 5 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) #(" 
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) " " #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("(setq doom-fallback-buffer \"*dashboard*\")
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 5 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5 27 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 28 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 29 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 29 38 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 38 39 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39 40 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 40 41 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 41 42 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #("
" 0 1 (face (org-block) font-lock-multiline t org-category "init" src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) " " #("TODO" 0 4 (fontified t face (nil :foreground "orange1" :inherit fixed-pitch :weight medium org-level-3))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("src
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t) 1 3 (yank-handler (evil-yank-line-handler nil t) fontified t) 3 4 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("   " 0 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) "    " #("#+begin_src emacs-lisp :tangle yes

#+end_src
" 0 11 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t composition (4 11 [8811]) prettify-symbols-start 55114 prettify-symbols-end 55125 font-lock-multiline t face org-block-begin-line) 11 34 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34 35 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 35 36 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 36 45 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t composition (4 9 [8811]) prettify-symbols-start 55150 prettify-symbols-end 55159 font-lock-multiline t face org-block-end-line) 45 46 (yank-handler (evil-yank-line-handler nil t) fontified t face org-block-end-line)) #("  :after yasnippet)
" 0 2 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 8 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8 20 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #("  
  
  
  
  
  
  
  
  
  
  
  
  
  " 0 1 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 1 2 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 2 3 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 3 5 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 5 6 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 6 8 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 8 9 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 9 11 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 11 12 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 12 14 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 14 15 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 15 17 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 17 18 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 18 20 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 20 21 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 21 23 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 23 30 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 30 32 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 32 33 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 33 35 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 35 36 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 36 38 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 38 39 (yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle)) 39 41 (fontified t yank-handler (evil-yank-block-handler (#("  " 0 1 (fontified t) 1 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) "  " "  " #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t)) #("  " 0 2 (fontified t))) t evil-delete-yanked-rectangle))) #("#+END_SRC

*** Doom Snippets
#+begin_src emacs-lisp
" 0 9 (face org-block-end-line font-lock-multiline t prettify-symbols-end 55084 prettify-symbols-start 55075 composition (3 9 [8811]) org-category "init" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 9 10 (face org-block-end-line org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 10 11 (org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 11 12 (composition (1 1 [32]) face org-superstar-leading org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 12 13 (composition (1 1 [32]) face org-superstar-leading org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (composition (4 1 [10040]) face (org-superstar-header-bullet org-level-3) org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (face org-level-3 org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 15 28 (face org-level-3 org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 28 29 (org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 29 40 (face org-block-begin-line font-lock-multiline t prettify-symbols-end 55115 prettify-symbols-start 55104 composition (3 11 [8811]) font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 40 51 (face org-block-begin-line font-lock-multiline t font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 51 52 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t))) #(" :tangle no" 0 11 (fontified t org-category "init" font-lock-fontified t font-lock-multiline t face org-block-begin-line)) #("  :straight (doom-snippets :type git :host github :repo \"hlissner/doom-snippets\" :files (\"*.el\" \"*\")))
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 2 11 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 11 27 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 27 32 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 32 37 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 37 42 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 42 50 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 50 55 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 55 56 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 56 80 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 80 81 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 81 87 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 87 89 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 89 90 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 90 91 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 91 95 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 95 96 (face (org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 96 97 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 97 98 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 98 99 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t)) 99 103 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t org-category "init" fontified t yank-handler (evil-yank-line-handler nil t))) #("doom-snippets" 0 13 (fontified t org-category "init" font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t)) #("::
" 0 2 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face (org-block) font-lock-multiline t org-category "init" src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("    :straight nil
" 0 4 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 4 13 (src-block t help-echo nil face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 13 18 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("  :straight (vertico :files (:defaults \"extensions/*\")
                     :includes (vertico-indexed
                                vertico-flat
                                vertico-grid
                                vertico-mouse
                                vertico-quick
                                vertico-buffer
                                vertico-repeat
                                vertico-reverse
                                vertico-directory
                                vertico-multiform
                                vertico-unobtrusive
                                ))
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 2 11 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 11 21 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 21 27 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 27 29 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 29 38 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 38 39 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 39 53 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 53 76 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 76 85 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 85 614 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("*** Straight
#+begin_src emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name \"straight/repos/straight.el/bootstrap.el\" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         \"https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el\"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

;; Use straight.el for use-package expressions
(straight-use-package 'use-package)
(setq straight-use-package-by-default t)

(eval-when-compile
  (require 'use-package))
#+end_src
" 0 2 (face org-level-3 fontified t yank-handler (evil-yank-line-handler nil t)) 2 4 (face org-level-3 fontified t yank-handler (evil-yank-line-handler nil t)) 4 8 (face org-level-3 fontified t yank-handler (evil-yank-line-handler nil t)) 8 12 (face org-level-3 fontified t yank-handler (evil-yank-line-handler nil t)) 12 13 (fontified t yank-handler (evil-yank-line-handler nil t)) 13 35 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 35 36 (help-echo nil face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 37 43 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 43 44 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 44 61 (src-block t help-echo nil face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 61 64 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 64 67 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 67 110 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 110 151 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 151 207 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 207 213 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 213 250 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 250 269 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 269 315 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 315 316 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 316 388 (src-block t face (font-lock-string-face org-block) font-lock-fontified t font-lock-multiline t htmlize-link (:uri "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el") help-echo nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t yank-handler (evil-yank-line-handler nil t)) 388 389 (src-block t face (font-lock-string-face org-block) font-lock-fontified t font-lock-multiline t htmlize-link (:uri "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el") help-echo nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t yank-handler (evil-yank-line-handler nil t)) 389 390 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 390 528 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 528 531 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 531 575 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 575 612 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 612 616 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 616 654 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 654 671 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 671 675 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 675 682 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 682 684 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 684 695 (src-block t help-echo nil face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 695 698 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 698 707 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 707 708 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("    :straight nil
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 4 13 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 15 16 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16 17 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 17 18 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #("*** Use-package
" 0 1 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-superstar-leading composition (1 1 [32])) 1 2 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-superstar-leading composition (1 1 [32])) 2 3 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face (org-superstar-header-bullet org-level-3) composition (4 1 [10040])) 3 4 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-level-3) 4 15 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-level-3) 15 16 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t)) #("#+end_src
" 0 9 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t composition (3 9 [8811]) prettify-symbols-start 1603 prettify-symbols-end 1612 face org-meta-line) 9 10 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t)) #("*** Straight
#+begin_src emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name \"straight/repos/straight.el/bootstrap.el\" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         \"https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el\"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

;; Use straight.el for use-package expressions
(straight-use-package 'use-package)
(setq straight-use-package-by-default t)

(eval-when-compile
  (require 'use-package))
" 0 1 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-superstar-leading composition (1 1 [32])) 1 2 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-superstar-leading composition (1 1 [32])) 2 3 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face (org-superstar-header-bullet org-level-3) composition (4 1 [10040])) 3 4 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-level-3) 4 12 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t face org-level-3) 12 13 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t) 13 24 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t composition (3 11 [8811]) prettify-symbols-start 1616 prettify-symbols-end 1627 font-lock-multiline t face org-block-begin-line) 24 35 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 35 36 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36 37 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 37 43 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 43 44 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 44 61 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 61 63 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 63 64 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 64 67 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 67 85 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 85 110 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 110 151 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 151 175 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 175 204 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 204 207 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 207 213 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 213 245 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 245 250 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 250 269 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 269 270 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 270 306 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 306 315 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 315 316 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 316 381 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t help-echo "LINK: https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el" htmlize-link (:uri "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)) 381 388 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t help-echo "LINK: https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el" htmlize-link (:uri "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)) 388 389 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el" htmlize-link (:uri "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)) 389 390 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 390 391 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 391 426 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 426 456 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 456 487 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 487 527 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 527 528 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 528 531 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 531 575 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 575 611 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 611 612 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 612 616 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 616 652 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 652 653 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 653 654 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 654 671 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 671 672 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 672 675 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 675 682 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 682 684 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 684 695 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 695 698 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #("(setq package-enable-at-startup nil)
" 0 1 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 5 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5 36 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 36 37 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)))))
(setq register-alist '((113) (101 . "e") (48 . #(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))))))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '(#("tangle no" 0 9 (isearch-case-fold-search t)) #("use-package emacs" 0 17 (isearch-case-fold-search t)) #("straight" 0 8 (isearch-case-fold-search t)) #("yasnippet-sni" 0 13 (isearch-case-fold-search t)) #("doom-snipp" 0 10 (isearch-case-fold-search t)) #("smart" 0 5 (isearch-case-fold-search t)) #("use-package" 0 11 (isearch-case-fold-search t)) #("use-package org" 0 15 (isearch-case-fold-search t)) #("/" 0 1 (isearch-case-fold-search t)) #("syntax" 0 6 (isearch-case-fold-search t)) #("syntaxx" 0 7 (isearch-case-fold-search t)) #("src-na" 0 6 (isearch-case-fold-search t)) #("headline" 0 8 (isearch-case-fold-search t)) #("todol" 0 5 (isearch-case-fold-search t)) #("org syn" 0 7 (isearch-case-fold-search t)) #("supersta" 0 8 (isearch-case-fold-search t))))
